"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const AbstractCommand_1 = require("../AbstractCommand");
class MultiViewerSourceCommand extends AbstractCommand_1.default {
    constructor() {
        super(...arguments);
        this.rawName = 'MvIn';
    }
    updateProps(newProps) {
        this._updateProps(newProps);
    }
    deserialize(rawCommand) {
        this.index = rawCommand.readUInt8(1);
        this.multiViewerId = rawCommand.readUInt8(0);
        this.properties = {
            source: rawCommand.readUInt16BE(2),
            windowIndex: rawCommand.readUInt8(1)
        };
    }
    serialize() {
        const rawCommand = 'CMvI';
        return new Buffer([
            ...Buffer.from(rawCommand),
            this.multiViewerId,
            this.properties.windowIndex,
            this.properties.source >> 8,
            this.properties.source & 0xFF
        ]);
    }
    applyToState(state) {
        const obj = {};
        obj[this.index] = this.properties;
        state.settings.multiViewers[this.multiViewerId] = Object.assign({}, state.settings.multiViewers[this.multiViewerId], obj);
    }
}
exports.MultiViewerSourceCommand = MultiViewerSourceCommand;
//# sourceMappingURL=MultiViewerSourceCommand.js.map